@use './variables' as vars;
@use './color-palette' as palette;
@use './mixins/buttons';

.btn {
    display: inline-block;
    margin-bottom: 0; // For input.btn
    font-weight: vars.$btn-font-weight;
    text-align: center;
    vertical-align: middle;
    touch-action: manipulation;
    cursor: pointer;
    background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
    white-space: nowrap;
    @include buttons.button-size(vars.$padding-base-vertical, vars.$padding-base-horizontal, 14px, vars.$line-height-base, vars.$btn-border-radius-base);
    user-select: none;
    border-style: solid;
    border-width: 1px;

    &:focus,
    &.focus {
        outline: none;
    }

    &:hover {
        text-decoration: none;
        outline: none;
        box-shadow: none;
    }

    &:active {
        outline: none;
        box-shadow: none;
        border-style: solid;
        transform: translateY(1px);
    }

    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        cursor: vars.$cursor-disabled;
        opacity: .50;
        box-shadow: none;
    }
    // Icons inside buttons
    .btn-icon {
        margin-right: 8px;
    }
}

a.btn {
    &.disabled,
    fieldset[disabled] & {
        pointer-events: none; // Future-proof disabling of clicks on `<a>` elements
    }
}


// Alternate buttons
// --------------------------------------------------
.btn-primary {
    @include buttons.button-variant(
        #ffffff,
        #ffffff,
        palette.get-color('primary'),
        palette.get-color('primary', light));
}
.btn-secondary {
    @include buttons.button-variant(
        vars.$text-color,
        vars.$text-color,
        rgba(vars.$text-color, 0.15),
        rgba(vars.$text-color, 0.20));
}
.btn-secondary-inverse {
    @include buttons.button-variant(
        palette.get-color("gray", base),
        palette.get-color("gray", base),
        palette.get-color("gray", 6x-light),
        palette.get-color("gray", 5x-light));
}
.btn-danger {
    @include buttons.button-variant(
        #ffffff,
        #ffffff,
        palette.get-color('tertiary'),
        palette.get-color('tertiary', light));
}
.btn-alt {
    @include buttons.button-variant(
        vars.$text-color,
        palette.get-color('primary', 2x-light),
        transparent,
        transparent,
        vars.$text-color,
        palette.get-color('primary', 2x-light));
}
.btn-ghost {
    @include buttons.button-variant(
        vars.$text-color-secondary,
        vars.$text-color,
        transparent,
        rgba(vars.$text-color, 0.1));
}
.btn-ghost-alt {
    @include buttons.button-variant(
        vars.$text-color-secondary,
        palette.get-color('primary', 2x-light),
        transparent,
        transparent);
}
.btn-activate {
    @include buttons.button-variant(
        vars.$text-color,
        vars.$text-color,
        palette.get-color("secondary", base),
        palette.get-color("secondary", light));
}
// applying sizes to this element will not do anything
// as currently this button has a fixed size
.btn-carousel {
    @include buttons.button-variant(
        palette.get-color('primary'),
        palette.get-color('primary', light),
        transparent,
        transparent);

    padding: 16px 0 !important;

    &:focus {
        box-shadow: none;
    }

    &,
    &.btn-carousel-next {
        &:before {
            position: relative;
            left: -4px;
            height: 30px;
            width: 30px;
            content: '';
            display: block;
            border-right: 3px solid palette.get-color("primary");
            border-bottom: 3px solid palette.get-color("primary");
            transform: rotate(-45deg) skew(-20deg, -20deg);
        }
    }
    &.btn-carousel-prev {
        &:before {
            left: 4px;
            transform: rotate(-225deg) skew(-20deg, -20deg);
        }
    }
}

// Button Sizes
// --------------------------------------------------

.btn-xl {
    @include buttons.button-size(vars.$padding-xl-vertical, vars.$padding-xl-horizontal, vars.$font-size-xl, vars.$line-height-xl, vars.$btn-border-radius-xl);

    &.btn-round {
        @include buttons.button-round(vars.$font-size-xl, vars.$line-height-xl, vars.$padding-xl-vertical);
    }

    &.btn-close {
        @include buttons.button-close(vars.$font-size-xl, vars.$line-height-xl, vars.$padding-xl-vertical)
    }
}
.btn-lg {
    @include buttons.button-size(vars.$padding-large-vertical, vars.$padding-large-horizontal, vars.$font-size-large, vars.$line-height-large, vars.$btn-border-radius-large);

    &.btn-round {
        @include buttons.button-round(vars.$font-size-large, vars.$line-height-large, vars.$padding-large-vertical);
    }

    &.btn-close {
        @include buttons.button-close(vars.$font-size-large, vars.$line-height-large, vars.$padding-large-vertical)
    }
}
.btn-md {
    @include buttons.button-size(vars.$padding-base-vertical, vars.$padding-base-horizontal, 14px, vars.$line-height-base, vars.$btn-border-radius-base);

    &.btn-round {
        @include buttons.button-round(14px, vars.$line-height-base, vars.$padding-base-vertical);
    }

    &.btn-close {
        @include buttons.button-close(14px, vars.$line-height-base, vars.$padding-base-vertical)
    }
}
.btn-sm {
    @include buttons.button-size(vars.$padding-small-vertical, vars.$padding-small-horizontal, vars.$font-size-small, vars.$line-height-small, vars.$btn-border-radius-small);

    &.btn-round {
        @include buttons.button-round(vars.$font-size-small, vars.$line-height-small, vars.$padding-small-vertical);
    }

    &.btn-close {
        @include buttons.button-close(vars.$font-size-small, vars.$line-height-small, vars.$padding-small-vertical)
    }
}
.btn-xs {
    @include buttons.button-size(0, 7px, 12px, 1.333333333333, 9px);

    &.btn-round {
        @include buttons.button-round(12px, 1.333333333333, 0);
    }

    &.btn-close {
        @include buttons.button-close(12px, 1.333333333333, 0)
    }
}
.btn-slim {
    padding-left: 0;
    padding-right: 0;
}
.btn-no-padding {
    padding: 0;
}

// Block button
// --------------------------------------------------

.btn-block {
    display: block;
    width: 100%;
}

// Vertically space out multiple block buttons
.btn-block + .btn-block {
    margin-top: 5px;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
    &.btn-block {
        width: 100%;
    }
}
.btn-unstyled {
    background: transparent;
    border: none;
    margin: 0;
}
.dropdown,
.dropup {
    .btn-block {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
    }
}
