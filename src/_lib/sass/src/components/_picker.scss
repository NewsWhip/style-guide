@use '../variables' as vars;
@use '../mixins/scrollbars' as sb;
@use '../buttons'; // required for the extend usage
@use '../color-palette' as palette;

nw-angular-picker {
    @include sb.scrollbars();

    .nw-picker {
        position: relative;
    }
    .input-container {
        position: relative;
    }
    .input-placeholder {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        padding: 9px 12px;
        font-size: 14px;
        line-height: 1;
    }
    .search-input {
        cursor: pointer;

        &:focus {
            ~ .input-placeholder {
                display: none;
            }
        }
        &:not(:focus) {
            @extend .btn-secondary;

            ::placeholder { color: transparent; }
            &::-moz-placeholder { color: transparent; }
            &::-webkit-input-placeholder  { color: transparent; }
        }
        ~ .dropdown-icon, ~ .reset-icon {
            position: absolute;
            right: 10px;
            font-size: 24px;
            font-weight: 100;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
        }
        ~ .reset-icon {
            color: palette.get-color("gray");
            right: 5px;
        }
    }
    .scroll-container {
        overflow-y: auto;
        max-height: 400px;

        @media (max-width: vars.$screen-sm) {
            flex: 1;
            max-height: unset;
        }
    }
    .results-actions {
        display: flex;
        justify-content: space-between;
        padding: 0 8px;
        line-height: 32px;
        color: palette.get-color("gray");
        border-bottom: 1px solid vars.$divider-color-primary;
    }
    .search-results {
        position: absolute;
        width: 100%;
        margin-bottom: 24px;
        background-color: #fff;
        z-index: 10;

        .search-result, .parent {
            position: relative;
            padding-left: 8px;
            font-size: 14px;
            color: palette.get-color("gray");
            cursor: pointer;

            &:hover {
                background: palette.get-color("primary", 3x-light);
            }
            .item-label {
                overflow: hidden;
                white-space: nowrap;
                text-overflow: ellipsis;
                flex: 1;
            }
            .btn-ghost:not(:hover) {
                color: palette.get-color("gray");
            }
            .result-item {
                display: flex;
                flex-direction: row;
                align-items: center;
                line-height: 32px;

                .checkbox {
                    margin: 0;
                }
            }
            &.excluded {
                .item-label {
                    text-decoration: line-through;
                }
            }
            .drilldown {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }
        }
        .picker-action {
            color: palette.get-color("primary", base);
        }
        @media (max-width: vars.$screen-sm) {
            display: flex;
            flex-direction: column;
            position: fixed;
            top: 0;
            left: 0;
            height: 100%;
            padding: 0;
            max-height: initial;
            overflow-y: auto;
            z-index: 100;
        }
        .results-header {
            display: none;
            height: 50px;
            line-height: 45px;
            padding: 0 12px;
            width: 100%;
            font-size: 32px;
            border-bottom: 1px solid vars.$divider-color-primary;

            @media (max-width: vars.$screen-sm) {
                display: flex;
                justify-content: flex-end;
            }
        }
        .results-footer {
            padding: 8px;
            border-top: 1px solid vars.$divider-color-primary;
        }
    }
}
