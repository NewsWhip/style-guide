@use './variables' as vars;
@use './mixins/dropdowns';
//
// Dropdown menus
// --------------------------------------------------

// Dropdown arrow/caret
.caret {
    display: inline-block;
    width: 0;
    height: 0;
    margin-top: -1px;
    margin-left: 2px;
    vertical-align: middle;
    border-top:   vars.$caret-width-base dashed;
    border-right: vars.$caret-width-base solid transparent;
    border-left:  vars.$caret-width-base solid transparent;
}

// The dropdown wrapper (div)
.dropup,
.dropdown {
    position: relative;
}

// Prevent the focus on the dropdown toggle when closing dropdowns
.dropdown-toggle:focus {
    outline: 0;
}

// The dropdown menu (ul)
.dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: vars.$zindex-dropdown;
    display: none; // none by default, but block on "open" of the menu
    float: left;
    min-width: 160px;
    padding: 5px 0;
    margin: 2px 0 0; // override default ul
    list-style: none;
    font-size: 14px;
    text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
    background-color: vars.$dropdown-bg;
    border: 1px solid vars.$dropdown-border;
    border-radius: vars.$border-radius-base;
    box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.4);
    background-clip: padding-box;

    // // Dividers (basically an hr) within the dropdown
    .divider {
        height: 1px;
        margin: 5px 0;
        overflow: hidden;
        background-color: vars.$dropdown-divider-bg;
    }

    &.dropdown-menu-arrow {
        &:after, &:before {
            border-style: solid;
            border-color: transparent;
            content: " ";
            height: 0;
            width: 0;
            bottom: 100%;
            left: 17px;
            position: absolute;
            pointer-events: none;
        }
        &:after {
            border-bottom-color: vars.$dropdown-bg;
            border-width: 7px;
            margin-left: -7px;
        }
        &:before {
            border-bottom-color: vars.$dropdown-border;
            border-width: 8px;
            margin-left: -8px;
        }
        &.dropdown-menu-right {
            &:after, &:before {
                right: 0;
                margin-left: 0;
                left: auto;
            }
            &:after {
                margin-right: 10px;
            }
            &:before {
                margin-right: 9px;
            }
        }
    }
}

//
// The following is the full expected structure for nested dropdowns
//
// .dropdown
//     .dropdown-toggle (class not required but some means of toggling the dropdown)
//     .dropdown-menu
//         li a
//         li a
//         ....
//         ....
//         ....
//         li a
//         ul.dropdown-submenu
//             li (this will be the means of toggling if hover)
//                 a (this will be the means of toggling if clicking)
//                 .dropdown-menu
//                     li a
//                     li a
//                     ....

// Nested Dropdown
.dropdown-submenu {
    position:relative;
    padding: 0;
    list-style: none;

    > li > .dropdown-menu {
        left: 100%;
        top: -8px;
    }
    .fa-caret-right {
        float: right;
    }
    &.submenu-left {
        > li > .dropdown-menu {
            transform: translateX(-100%);
            left: 0;
        }
    }
}

// Hover/Focus state
.dropdown-menu,
.dropdown-submenu {
    > li > a {
        // Links within the dropdown menu
        @include dropdowns.dropdown-menu-link;
    }
}

// Active state
.dropdown-menu,
.dropdown-submenu {
    > .active > a {
        @include dropdowns.dropdown-menu-link-active;
    }
}

// Disabled state
//
// Gray out text and ensure the hover/focus state remains gray
.dropdown-menu > .disabled > a,
.dropdown-submenu > .disabled > a {
    &,
    &:hover,
    &:focus {
        @include dropdowns.dropdown-menu-link-disabled;
    }
}

// Open state for the dropdown
.open {
    // Show the menu,// Show the submenu
    > .dropdown-menu, > li > .dropdown-menu {
        display: block;
    }
    // Remove the outline when :focus is triggered
    > a {
        outline: 0;
    }
    > .dropdown-backdrop {
        display: block;
    }
}

// Menu positioning
//
// Add extra class to `.dropdown-menu` to flip the alignment of the dropdown
// menu with the parent.
.dropdown-menu-right {
    left: auto; // Reset the default from `.dropdown-menu`
    right: 0;
}
// With v3, we enabled auto-flipping if you have a dropdown within a right
// aligned nav component. To enable the undoing of that, we provide an override
// to restore the default dropdown menu alignment.
//
// This is only for left-aligning a dropdown menu within a `.navbar-right` or
// `.pull-right` nav component.
.dropdown-menu-left {
    left: 0;
    right: auto;
}

.dropdown-menu-block {
    width: 100%;
}

// Dropdown section headers
.dropdown-header {
    display: block;
    padding: 3px 16px;
    padding-top: 8px;
    font-size: vars.$font-size-base;
    line-height: vars.$line-height-base;
    color: vars.$dropdown-header-color;
    white-space: nowrap; // as with > li > a
    text-transform: uppercase;
}

// Backdrop to catch body clicks on mobile, etc.
.dropdown-backdrop {
    position: fixed;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
    z-index: (vars.$zindex-dropdown - 10);
    display: none;
}

.dropup,
.navbar-fixed-bottom .dropdown {
    // Reverse the caret
    .caret {
        border-top: 0;
        border-bottom: vars.$caret-width-base dashed;
        content: "";
    }
    // Different positioning for bottom up menu
    .dropdown-menu {
        top: auto;
        bottom: 100%;
        margin-bottom: 2px;

        &.dropdown-menu-arrow {
            &:after, &:before {
                top: 100%;
                transform: rotateZ(180deg);
            }
        }
        // For nested dropdowns
        > .dropdown-submenu > li > .dropdown-menu {
            top: unset;
            bottom: -8px;
        }
    }
}

.dropdown-menu-inverse {
    $dropdown-inverse-link-color: vars.$level1;
    $dropdown-inverese-link-active-bg: get-color("primary", 3x-light);

    background-color: #ffffff;
    .dropdown-header {
        color: get-color("gray", x-light);
    }
    > li > a {
        color: $dropdown-inverse-link-color;
        cursor: pointer;

        &:hover,
        &:focus {
            color: $dropdown-inverse-link-color;
            background-color: $dropdown-inverese-link-active-bg;
        }
    }
    > .disabled > a {
        &,
        &:hover,
        &:focus {
            color: $dropdown-inverse-link-color;
            background-color: transparent;
        }
    }
    > .active > a {
        &,
        &:hover,
        &:focus {
            color: $dropdown-inverse-link-color;
            background-color: $dropdown-inverese-link-active-bg;
        }
    }
    .divider {
        background: rgba(vars.$level0, 0.4);
    }
}
// Custom popover styling for dropdowns appended to body
.popover-dropdown {
    background: transparent !important;
    border: none !important;
    box-shadow: none !important;
    margin: 0 !important;
    padding: 0 !important;

    .tooltip-inner {
        padding: 0;
    }
}
