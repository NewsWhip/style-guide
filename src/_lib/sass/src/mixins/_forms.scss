@use '../variables' as vars;
// Form validation states
//
// Used in forms.less to generate the form validation CSS for warnings, errors,
// and successes.

@mixin form-control-validation($text-color: #555, $border-color: #ccc, $background-color: #f5f5f5) {
    // Color the label and help text
    .help-block,
    .radio,
    .checkbox,
    &.radio label,
    &.checkbox label  {
        color: $text-color;
    }
    // Set the border and box shadow on specific inputs to match
    .form-control {
        border-color: $border-color;
        &:focus {
            border-color: $border-color;
            @include form-control-focus($border-color);
        }
    }
    // Custom checkboxes
    .radio input[type="radio"],
    .checkbox input[type="checkbox"] {
        ~ label {
            &:before {
                box-shadow: 1px 1px 0 $border-color,      // bottom-right
                            -1px 1px 0 $border-color,     // bottom-left
                            1px -1px 0 $border-color,     // top-right
                            -1px -1px 0 $border-color;    // top-left;
            }
        }
        &:focus {
            ~ label {
                &:before {
                    box-shadow: 2px 2px 0 $border-color,      // bottom-right
                                -2px 2px 0 $border-color,     // bottom-left
                                2px -2px 0 $border-color,     // top-right
                                -2px -2px 0 $border-color;    // top-left;
                }
            }
        }
    }
    // Custom switch
    .switch {
        input {
            ~ label.switch-toggle {
                @include form-control-focus($border-color);
            }
            &:focus {
                ~ label.switch-toggle {
                    box-shadow: 2px 2px 0 $border-color,      // bottom-right
                                -2px 2px 0 $border-color,     // bottom-left
                                2px -2px 0 $border-color,     // top-right
                                -2px -2px 0 $border-color;    // top-left;
                }
            }
        }
    }
}


// Form control focus state
//
// Generate a customized focus state and for any input with the specified color,
// which defaults to the `$input-border-focus` variable.
//
// We highly encourage you to not customize the default value, but instead use
// this to tweak colors on an as-needed basis. This aesthetic change is based on
// WebKit's default styles, but applicable to a wider range of browsers. Its
// usability and accessibility should be taken into account with any change.
//
// Example usage: change the default blue border and shadow to white for better
// contrast against a dark gray background.
@mixin form-control-focus($color: vars.$input-border-focus, $size: 1px) {
    border-color: $color;
    outline: 0;
    box-shadow:     #{$size} #{$size} 0 $color,      // bottom-right
                    -#{$size} #{$size} 0 $color,     // bottom-left
                    #{$size} -#{$size} 0 $color,     // top-right
                    -#{$size} -#{$size} 0 $color;    // top-left
}

// Form control sizing
//
// Relative text size, padding, and border-radii changes for form controls. For
// horizontal sizing, wrap controls in the predefined grid classes. `<select>`
// element gets special love because it's special, and that's a fact!
// [converter] $parent hack
@mixin input-size($parent, $input-height, $padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) {
    #{$parent} {
        height: $input-height;
        padding: $padding-vertical $padding-horizontal;
        font-size: $font-size;
        line-height: $line-height;
        border-radius: $border-radius;
    }
    
    select#{$parent} {
        height: $input-height;
        line-height: $input-height;
    }
    
    textarea#{$parent},
    select[multiple]#{$parent} {
        height: auto;
    }
}

@mixin switch($height) {
    $round-button-size: $height - 6;
    $width: ($round-button-size * 2) + 6;

    label {
        line-height: $height;

        &.switch-toggle {
            height: $height;
            width: $width;
            border-radius: $height * 0.5;
            font-size: $height * 0.5;

            .on-off {
                height: $round-button-size;
                width: $round-button-size;
                line-height: $round-button-size;
                border-radius: 50%;

                &:after {
                    margin-left: $width * 0.5;
                }
                &:before {
                    margin-left: -$width * 0.5;
                }
            }
        }
    }
    input {
        &:checked {
            ~ label.switch-toggle {
                .on-off {
                    left: $width * 0.5;
                }
            }
        }
    }
}
