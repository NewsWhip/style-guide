{
  "root": true,
  "ignorePatterns": [
    "src/**/*.spec.ts",
    "src/app/"
  ],
  "overrides": [
    {
      "files": [
        "src/_lib/**/*.ts"
      ],
      "parserOptions": {
        "project": [
          "src/tsconfig.app.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/ng-cli-compat",
        "plugin:@angular-eslint/ng-cli-compat--formatting-add-on",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "rules": {
        "@angular-eslint/contextual-decorator": "error",
        "@angular-eslint/no-lifecycle-call": "error",
        "@angular-eslint/prefer-on-push-component-change-detection": "error",
        "@angular-eslint/use-component-view-encapsulation": "error",
        "@typescript-eslint/dot-notation": "off",
        "no-empty-function": "off",
        "@typescript-eslint/no-empty-function": ["error"],
        "no-multiple-empty-lines": "error",
        "no-unused-expressions": "error",
        "prefer-const": [
          "error",
          {
            "destructuring": "all"
          }
        ],
        "semi": "error",
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": ["element", "attribute"],
            "prefix": "nw",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "nw",
            "style": "camelCase"
          }
        ],
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/naming-convention": [
          "error",
          { // ignore enum memebers
            "selector": [
              "enumMember"
            ],
            "format": null
          },
          { // replaces "interface-name": [true, "always-prefix"]
            // modified from example: https://tinyurl.com/6cwmfryj
            "selector": "interface",
            "format": ["PascalCase"],
            "custom": {
              "regex": "^I[A-Z]",
              "match": true
            }
          },
          {
            "selector": "variable",
            "format": ["camelCase", "UPPER_CASE", "PascalCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "memberLike",
            "modifiers": ["private"],
            "format": ["camelCase"],
            "leadingUnderscore": "require"
          }
        ],
        "curly": "error",
        "no-restricted-imports": [
          "error", {
            "paths": [
              "lodash",
              "ngx-bootstrap/popover",
              "ngx-bootstrap/tooltip"
            ]
          }
        ],
        "no-caller": "error",
        "@typescript-eslint/consistent-type-assertions": "error",
        "no-bitwise": "error",
        "no-new-wrappers": "error",
        "no-debugger": "error",
        "constructor-super": "error",
        // Set to false because of the following example
        // constructor(private _errorsService: ErrorsService) {}
        "no-empty": "off",
        "@typescript-eslint/no-empty-interface": "error",
        "no-eval": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-throw-literal": "error",
        "no-fallthrough": "error",
        "no-undef-init": "error",
        "no-var": "error",
        "radix": "error",
        "eqeqeq": "error",
        "@typescript-eslint/member-delimiter-style": "error",
        "@angular-eslint/contextual-lifecycle": "error",
        "@angular-eslint/no-output-on-prefix": "error",
        "@angular-eslint/no-inputs-metadata-property": "error",
        "@angular-eslint/no-outputs-metadata-property": "error",
        "@angular-eslint/no-conflicting-lifecycle": "error",
        "@angular-eslint/no-output-rename": "error",
        "@angular-eslint/use-lifecycle-interface": "error",
        "@angular-eslint/use-pipe-transform-interface": "error",
        "@angular-eslint/component-class-suffix": "error",
        "@angular-eslint/directive-class-suffix": "error",
        "@angular-eslint/no-host-metadata-property": "off",
        "deprecation/deprecation": "warn",

        /* The following rules were added and set to "off" in order to address the new linting errors that appeared
          after migration from tslint to eslint, since fixing these errors would require code changes.
          These rules should be addressed one by one as part of tech debt in the following manner:
          a rule should be removed, the resulting error fixed and the code change tested. */
        "eol-last": "off",
        "guard-for-in": "off",
        "max-len": "off",
        "no-console": "off",
        "no-underscore-dangle": "off",
        "quote-props": "off",
        "@typescript-eslint/ban-types": "off",
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/no-shadow": "off",
        "@typescript-eslint/prefer-for-of": "off",
        "@typescript-eslint/quotes": "off",
        "@angular-eslint/no-input-rename": "off",
        "object-shorthand": "off",
        "jsdoc/newline-after-description": "error",
        "jsdoc/check-alignment": "error",
        "arrow-body-style": "off",

        // whitespace/spacing rules
        "no-irregular-whitespace": "error",
        "space-before-function-paren": [
          "error",
          {
            "anonymous": "never",
            "named": "never",
            "asyncArrow": "never"
          }
        ],
        "space-in-parens": [
          "error",
          "never"
        ],
        "no-trailing-spaces": "error",
        "spaced-comment": "error",
        "@typescript-eslint/type-annotation-spacing": "error",
        "no-multi-spaces": "error",
        "comma-spacing": "error",
        "array-bracket-spacing": "error",
        "arrow-spacing": "error",
        "rest-spread-spacing": "error",
        "semi-spacing": "error",
        "key-spacing": "error",
        "space-before-blocks": "error",
        "keyword-spacing": "error",
        "indent": ["error", 4, {"SwitchCase":  1}],
        "brace-style": "error",
        "space-infix-ops": "error"
      },
      "plugins": ["deprecation"]
    },
    {
      "files": [
        "app/**/*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {
        "@angular-eslint/template/no-any": "error",
        "@angular-eslint/template/banana-in-box": "error",
        "@angular-eslint/template/no-negated-async": "error"
      }
    }
  ]
}
