name: Build and publish package
#
# This workflow should run when a new release is published
#
# To publish the package we manually call the individual steps in the release.js script
# - npm run package:build
# - node scripts/copy-package-file.js
# - and finally npm publish distribution
#
# A standard `npm publish` would require a two-factor password. In place of a two-factor password we're using an automation
# token generated specifically for the nw-style-guide package. This is stored in `secrets.NPM_PUBLISH_TOKEN`
#
# on:
#   release:
#     types: [published]

on:
  push:
    branches:
      - main
      - master

permissions:
  id-token: write  # Required for OIDC
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
      - uses: ./.github/actions/npm-install
        with:
          token: ${{secrets.FONTAWESOME_NPM_AUTH_TOKEN}}
      - name: Build package
        run: npm run package:build
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: my-package
          path: lib-dist
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: my-package
          path: lib-dist
      - uses: actions/setup-node@v4
        with:
          node-version: 22.16
          registry-url: https://registry.npmjs.org/
      # Ensure npm 11.5.1 or later is installed for trusted publishing
      - name: Update npm
        run: npm install -g npm@latest
      # Determine an appropriate dist-tag from the version
      - name: Compute dist-tag
        id: tag
        shell: bash
        run: |
          PACKAGE_JSON_PATH="lib-dist/nw-style-guide/package.json"
          VERSION=$(node -p "require('${PACKAGE_JSON_PATH}').version")

          if [[ "$VERSION" == *-* ]]; then
            # prerelease (e.g., 1.2.3-beta.1) -> use the preid as the tag if present, else 'next'
            PREID=$(node -p "const v=require('semver').prerelease(require('${PACKAGE_JSON_PATH}').version); v && v[0] ? v[0] : ''" || true)
            echo "value=${PREID:-next}" >> "$GITHUB_OUTPUT"
          else
            echo "value=latest" >> "$GITHUB_OUTPUT"
          fi  
      - name: Publish
        run: |
          TAG="${{ steps.tag.outputs.value }}"
          echo "Publishing with dist-tag '$TAG'"
          npm publish --tag "$TAG"
        working-directory: lib-dist/nw-style-guide
        # env:
        #   NODE_AUTH_TOKEN: ${{secrets.NPM_PUBLISH_TOKEN}}
